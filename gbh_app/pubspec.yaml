name: marshmellow
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.6.1

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  # 상태 관리
  flutter_riverpod: ^2.6.1 # 상태 관리 라이브러리, Provider 패턴 기반으로 상태 관리와 의존성 주입을 간편하게 처리

  # 네트워크 통신
  dio: ^5.8.0+1 # HTTP 클라이언트, REST API 호출에 사용되며 인터셉터, 타임아웃, 취소 등 고급 기능 제공
  retrofit: ^4.4.2 # Dio와 함께 사용하는 REST API 클라이언트 생성기
  retrofit_generator: ^7.0.0 # ^9.1.9  # retrofit 코드 생성기

  # 데이터 모델링
  freezed: ^2.3.0 #^2.5.7  # 불변(immutable) 데이터 클래스 생성기, 자동 직렬화/역직렬화 지원
  freezed_annotation: ^2.4.4 # freezed에 필요한 어노테이션
  json_serializable: ^6.6.0 #^6.9.4  # JSON 직렬화/역직렬화 코드 생성기
  json_annotation: ^4.9.0 # json_serializable에 필요한 어노테이션

  # 로컬 데이터 저장
  shared_preferences: ^2.5.2 # 간단한 키-값 저장소
  hive: ^2.2.3 # 경량 NoSQL 데이터베이스
  hive_flutter: ^1.1.0 # Flutter에서 Hive 사용을 위한 확장

  # 보안 관련
  flutter_secure_storage: ^9.2.4 # 보안 저장소, 생체인식, 키체인, 키스토어 등 OS의 보안 기능 활용
  encrypt: ^5.0.3 # 데이터 암호화 라이브러리
  crypto: ^3.0.6 # 암호화 알고리즘 (SHA, MD5 등) 제공
  # dio_pinning: 정확한 패키지명 확인 필요 (인증서 핀닝용)
  local_auth: ^2.3.0 # 생체인증 (지문, 얼굴인식 등)

  # 환경 설정
  flutter_dotenv: ^5.2.1 # .env 파일로 환경변수 관리

  # 유틸리티
  intl: ^0.19.0 # 국제화 및 날짜/통화 포맷팅
  logger: ^2.5.0 # 로깅 기능 제공
  get_it: ^8.0.3 # 서비스 로케이터, 의존성 주입

  # 코드 생성 관련
  build_runner: ^2.3.0 # 최신 버전보다 약간 낮은 버전  # 코드 생성 실행 도구 (개발 의존성)

  # date picker
  syncfusion_flutter_datepicker: ^28.2.11
  # UI
  flutter_svg: ^2.0.7 # SVG 이미지 렌더링

  #router
  go_router: ^14.8.1

  convex_bottom_bar: ^3.2.0 # 컨벡스 디자인 하단 탭바

  # 키보드관련
  flutter_secure_keyboard: ^4.0.0 # 보안키보드
  simple_numpad: ^1.0.5 # 숫자키보드/계산기키보드
  keyboard_actions: ^4.2.0 # 기본키보드 액션추가전용

  # lottie : 로딩인디케이터
  lottie: ^3.3.1

  # 문자앱 열기
  url_launcher: ^6.1.10

  # 더미데이터
  uuid: ^3.0.7

  # 삭제 애니메이션
  flutter_slidable: ^3.0.1

  # hive
  path_provider: ^2.1.1

  # 그래프
  syncfusion_flutter_charts: ^28.2.11
  fl_chart: ^0.65.0
  graphic: ^2.5.1
  sensors_plus: ^4.0.2
  rxdart: ^0.27.7

  # 화면 캡처 후 공유하기
  screenshot: ^3.0.0 # 화면 캡처용
  share_plus: ^10.1.4 # 공유 기능용

  # mm인증서 공개키/개인키 생성
  pointycastle: ^3.7.3
  asn1lib: ^1.4.0  # CSR 생성용

  # 마크다운
  flutter_markdown: ^0.7.6+2

  # 점메추 : 2D 물리엔진
  flame: ^1.26.1
  flame_forge2d: ^0.18.3

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - .env.dev
    - .env.prod
    - assets/
    - assets/fonts/
    - assets/images/
    - assets/images/mm/
    - assets/images/loading/
    - assets/images/characters/
    - assets/images/finance/
    - assets/images/userverification.png
    - assets/images/food/
    - assets/icons/
    - assets/icons/nav/
    - assets/icons/bank/
    - assets/icons/expense/
    - assets/icons/income/
    - assets/icons/transfer/
    - assets/icons/search_bar/
    - assets/icons/app_bar/
    - assets/icons/body/
    - assets/icons/card/
    - assets/icons/etc/
    - assets/agreements/

  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: S-CoreDream-5
      fonts:
        - asset: assets/fonts/SCDream1.otf
          weight: 100
        - asset: assets/fonts/SCDream2.otf
          weight: 200
        - asset: assets/fonts/SCDream3.otf
          weight: 300
        - asset: assets/fonts/SCDream4.otf
          weight: 400
        - asset: assets/fonts/SCDream5.otf
          weight: 500
        - asset: assets/fonts/SCDream6.otf
          weight: 600
        - asset: assets/fonts/SCDream7.otf
          weight: 700
        - asset: assets/fonts/SCDream8.otf
          weight: 800
        - asset: assets/fonts/SCDream9.otf
          weight: 900

  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
